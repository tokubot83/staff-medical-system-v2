// 健康管理システム データベーススキーマ
// Generated: 2025-09-29
// Purpose: 健康診断データ管理用Prismaスキーマ

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============================================================
// 1. 健康診断マスターテーブル
// ============================================================
model HealthCheckup {
  id                String   @id @default(cuid())
  staffId           String   @map("staff_id")
  checkupDate       DateTime @map("checkup_date")
  checkupType       CheckupType @default(REGULAR)
  facilityName      String?  @map("facility_name")
  doctorName        String?  @map("doctor_name")

  // 基本測定値
  height            Decimal? @db.Decimal(4, 1)
  weight            Decimal? @db.Decimal(4, 1)
  bmi               Decimal? @db.Decimal(3, 1)
  waistCircumference Decimal? @map("waist_circumference") @db.Decimal(4, 1)

  // 血圧
  systolicBp        Int?     @map("systolic_bp")
  diastolicBp       Int?     @map("diastolic_bp")

  // 視力
  visionRight       Decimal? @map("vision_right") @db.Decimal(2, 1)
  visionLeft        Decimal? @map("vision_left") @db.Decimal(2, 1)
  visionCorrected   Boolean? @map("vision_corrected")

  // 聴力
  hearingRight1000  HearingResult? @map("hearing_right_1000")
  hearingRight4000  HearingResult? @map("hearing_right_4000")
  hearingLeft1000   HearingResult? @map("hearing_left_1000")
  hearingLeft4000   HearingResult? @map("hearing_left_4000")
  hearingMethod     HearingMethod? @map("hearing_method")

  // 総合判定
  overallResult     OverallResult?
  reexaminationRequired Boolean @default(false) @map("reexamination_required")
  reexaminationItems String? @map("reexamination_items")

  // 医師所見
  doctorFindings    String?  @db.Text
  smokingHistory    Boolean? @map("smoking_history")
  medication        String?  @db.Text

  // 管理情報
  dataSource        DataSource @default(MANUAL)
  createdBy         String?    @map("created_by")
  createdAt         DateTime   @default(now()) @map("created_at")
  updatedAt         DateTime   @updatedAt @map("updated_at")

  // Relations
  staff             StaffMaster @relation(fields: [staffId], references: [id])
  details           HealthCheckupDetail[]
  events            HealthEvent[]

  @@index([staffId, checkupDate(sort: Desc)])
  @@index([overallResult, reexaminationRequired])
  @@map("health_checkups")
}

// ============================================================
// 2. 検査結果詳細テーブル
// ============================================================
model HealthCheckupDetail {
  id            String   @id @default(cuid())
  checkupId     String   @map("checkup_id")
  category      TestCategory
  itemCode      String   @map("item_code")
  itemName      String   @map("item_name")
  value         String?
  unit          String?
  referenceMin  Decimal? @map("reference_min") @db.Decimal(10, 2)
  referenceMax  Decimal? @map("reference_max") @db.Decimal(10, 2)
  status        TestStatus @default(NORMAL)

  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  // Relations
  checkup       HealthCheckup @relation(fields: [checkupId], references: [id], onDelete: Cascade)

  @@index([checkupId, category])
  @@index([status, itemCode])
  @@map("health_checkup_details")
}

// ============================================================
// 3. 病歴・既往歴管理テーブル
// ============================================================
model MedicalHistory {
  id                String   @id @default(cuid())
  staffId           String   @map("staff_id")
  reportDate        DateTime @map("report_date")
  reportType        ReportType @default(REGULAR_UPDATE)

  // 病歴情報
  diseaseName       String?  @map("disease_name")
  icd10Code         String?  @map("icd10_code")
  diagnosisDate     DateTime? @map("diagnosis_date")
  treatmentStatus   TreatmentStatus @default(UNTREATED)

  // 治療情報
  medication        Json?    // {name, dose, frequency}
  medicalInstitution String? @map("medical_institution")
  attendingDoctor   String?  @map("attending_doctor")

  // 就業への影響
  workRestrictions  String?  @map("work_restrictions") @db.Text
  accommodationNeeded Boolean @default(false) @map("accommodation_needed")

  // フォローアップ
  nextCheckupDate   DateTime? @map("next_checkup_date")
  notes             String?   @db.Text

  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @updatedAt @map("updated_at")

  // Relations
  staff             StaffMaster @relation(fields: [staffId], references: [id])

  @@index([staffId, treatmentStatus])
  @@index([nextCheckupDate])
  @@map("medical_histories")
}

// ============================================================
// 4. 就業配慮管理テーブル
// ============================================================
model WorkAccommodation {
  id                String   @id @default(cuid())
  staffId           String   @map("staff_id")

  // 配慮内容
  accommodationType AccommodationType
  startDate         DateTime @map("start_date")
  endDate           DateTime? @map("end_date")
  isActive          Boolean  @default(true) @map("is_active")

  // 詳細
  reason            String?
  details           String?  @db.Text
  doctorOpinion     String?  @map("doctor_opinion") @db.Text

  // 承認情報
  requestedBy       String?  @map("requested_by")
  approvedBy        String?  @map("approved_by")
  approvedDate      DateTime? @map("approved_date")
  status            AccommodationStatus @default(PENDING)

  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  // Relations
  staff             StaffMaster @relation(fields: [staffId], references: [id])

  @@index([isActive, endDate])
  @@index([staffId, accommodationType])
  @@map("work_accommodations")
}

// ============================================================
// 5. 健康イベント履歴テーブル
// ============================================================
model HealthEvent {
  id                String   @id @default(cuid())
  staffId           String   @map("staff_id")
  eventDate         DateTime @map("event_date")
  eventType         EventType

  // イベント詳細
  title             String?
  description       String?  @db.Text
  relatedId         String?  @map("related_id") // 関連レコードID

  // アクション
  actionRequired    String?  @map("action_required") @db.Text
  actionCompleted   Boolean  @default(false) @map("action_completed")
  followUpDate      DateTime? @map("follow_up_date")

  // 記録情報
  recordedBy        String?  @map("recorded_by")
  department        RecordingDepartment?

  createdAt         DateTime @default(now()) @map("created_at")

  // Relations
  staff             StaffMaster @relation(fields: [staffId], references: [id])
  checkup           HealthCheckup? @relation(fields: [relatedId], references: [id])

  @@index([staffId, eventDate(sort: Desc)])
  @@index([followUpDate, actionCompleted])
  @@map("health_events")
}

// ============================================================
// 6. 職員マスター（既存テーブルとの連携用）
// ============================================================
model StaffMaster {
  id                String   @id
  name              String
  department        String?
  position          String?
  facilityId        String?  @map("facility_id")
  employmentDate    DateTime? @map("employment_date")
  email             String?

  // Relations
  checkups          HealthCheckup[]
  medicalHistories  MedicalHistory[]
  accommodations    WorkAccommodation[]
  events            HealthEvent[]

  @@map("staff_master")
}

// ============================================================
// ENUMS
// ============================================================

enum CheckupType {
  REGULAR           @map("regular")          // 定期
  EMPLOYMENT       @map("employment")       // 雇入時
  SPECIAL          @map("special")          // 特殊
  OVERSEAS         @map("overseas")         // 海外派遣
}

enum OverallResult {
  A  // 異常なし
  B  // 軽度異常
  C  // 要経過観察
  D  // 要精密検査
  E  // 要治療
}

enum HearingResult {
  NORMAL           @map("normal")           // 所見なし
  ABNORMAL         @map("abnormal")         // 所見あり
}

enum HearingMethod {
  AUDIOMETER       @map("audiometer")       // オージオ
  OTHER            @map("other")            // その他
}

enum DataSource {
  CSV_IMPORT       @map("csv_import")
  MANUAL           @map("manual")
  API              @map("api")
}

enum TestCategory {
  VISION           @map("vision")           // 視力
  HEARING          @map("hearing")          // 聴力
  CHEST_XRAY       @map("chest_xray")       // 胸部X線
  URINE            @map("urine")            // 尿検査
  BLOOD            @map("blood")            // 血液検査
  LIVER            @map("liver")            // 肝機能
  LIPID            @map("lipid")            // 血中脂質
  KIDNEY           @map("kidney")           // 腎機能
  ECG              @map("ecg")              // 心電図
  STOOL            @map("stool")            // 便検査
}

enum TestStatus {
  NORMAL           @map("normal")
  ATTENTION        @map("attention")
  ABNORMAL         @map("abnormal")
}

enum ReportType {
  EMPLOYMENT       @map("employment")       // 入職時
  REGULAR_UPDATE   @map("regular_update")   // 定期更新
  VOLUNTARY        @map("voluntary")        // 随時申告
}

enum TreatmentStatus {
  UNDER_TREATMENT  @map("under_treatment")  // 治療中
  OBSERVATION      @map("observation")      // 経過観察
  CURED            @map("cured")            // 完治
  UNTREATED        @map("untreated")        // 未治療
}

enum AccommodationType {
  WORK_RESTRICTION @map("work_restriction") // 就業制限
  JOB_TRANSFER     @map("job_transfer")     // 配置転換
  REDUCED_HOURS    @map("reduced_hours")    // 時短勤務
  REMOTE_WORK      @map("remote_work")      // 在宅勤務
  NIGHT_SHIFT_EXEMPT @map("night_shift_exempt") // 夜勤免除
  OTHER            @map("other")            // その他
}

enum AccommodationStatus {
  PENDING          @map("pending")          // 申請中
  APPROVED         @map("approved")         // 承認済
  IN_PROGRESS      @map("in_progress")      // 実施中
  COMPLETED        @map("completed")        // 終了
  REJECTED         @map("rejected")         // 却下
}

enum EventType {
  CHECKUP_COMPLETED @map("checkup_completed") // 健康診断実施
  REEXAM_COMPLETED @map("reexam_completed")   // 再検査実施
  DOCTOR_CONSULTATION @map("doctor_consultation") // 産業医面談
  HEALTH_GUIDANCE  @map("health_guidance")    // 保健指導
  STRESS_CHECK     @map("stress_check")       // ストレスチェック
  VACCINATION      @map("vaccination")        // 予防接種
  MEDICAL_HISTORY_UPDATE @map("medical_history_update") // 病歴更新
  RESTRICTION_START @map("restriction_start") // 就業制限開始
  RESTRICTION_END  @map("restriction_end")    // 就業制限解除
  RESULT_NOTIFIED  @map("result_notified")    // 結果通知
  REMINDER_SENT    @map("reminder_sent")      // リマインド送信
}

enum RecordingDepartment {
  HR               @map("hr")                // 人事部
  HEALTH_CENTER    @map("health_center")     // 健診室
  OCCUPATIONAL_PHYSICIAN @map("occupational_physician") // 産業医
  SYSTEM           @map("system")            // システム
}